skinparam monochrome true
autonumber

!global $str_sdpi_p_somds_cons = "SOMDS Consumer"
!global $str_sdpi_p_somds_prov = "SOMDS Provider"

participant "$str_sdpi_p_somds_cons" as sdpi_somds_consumer
participant "$str_sdpi_p_somds_prov" as sdpi_somds_provider

== SDPi [DEV-27]  Manage BICEPS Subscription ==
|||
note over sdpi_somds_consumer, sdpi_somds_provider
DISCUSSION:  
(1) BICEPS does not provide any explicit messages or even requirements for Pub/Sub
(2) Consider a SDC / SOMDA generic transaction set that gets bound to MDPWS Eventing profile in Appendix A
(3) Consider how to eable future DoF subscription binding for alternative uses of BICEPS 
end note
|||
group secured
    sdpi_somds_consumer -> sdpi_somds_provider: SDC: Subscribe(Filter)
    note left: Filter is a list of topics to subscribe for,\ni.e. metrics, alerts, components,\ncontext states or waveforms 
    sdpi_somds_consumer <-- sdpi_somds_provider: SDC: SubscribeResponse(SubscriptionManager, ExpirationTime)
    note right: Subscription manager is an endpoint to\nrequest subscription removal, renewal\nor status retrieval
    |||
    par 
        opt if subscription is supposed to be kept alive
            loop shortly before ExpirationTime expires
                sdpi_somds_consumer -> sdpi_somds_provider: SDC: Renew(SubscriptionManager)
                sdpi_somds_consumer <-- sdpi_somds_provider: SDC: RenewResponse(ExpirationTime)
            end
        end
    end
    |||
    note over sdpi_somds_consumer, sdpi_somds_provider: See DEV-29 for update publication
    |||
    alt $str_sdpi_p_somds_cons decides to quit subscription
    sdpi_somds_consumer -> sdpi_somds_provider: SDC: Unsubscribe(SubscriptionManager)
    sdpi_somds_consumer <-- sdpi_somds_provider:SDC:  UnsubscribeResponse()
    else $str_sdpi_p_somds_prov decides to quit subscription
        sdpi_somds_consumer <- sdpi_somds_provider: SDC: SubscriptionEnd(SubscriptionManager)
    end
end
|||



