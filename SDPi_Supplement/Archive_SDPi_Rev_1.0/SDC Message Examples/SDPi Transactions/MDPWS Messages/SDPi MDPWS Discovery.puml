skinparam monochrome true
autonumber

!global $str_sdpi_p_somds_cons = "SOMDS Consumer"
!global $str_sdpi_p_somds_prov = "SOMDS Provider"

participant "$str_sdpi_p_somds_cons" as sdpi_somds_consumer
participant "$str_sdpi_p_somds_prov" as sdpi_somds_provider

== SDC/MDPWS Discovery Messages ==
|||
group unsecured
    group implicit discovery 
        sdpi_somds_provider -> sdpi_somds_consumer: SDC: Hello(EndpointReference, Types, Scopes, [XAddrs])
    end
    group explicit discovery
        loop (to ensure SDC "Hello" messages are not missed)
            sdpi_somds_consumer ->> sdpi_somds_provider: SDC: Probe(Types, Scopes)
            sdpi_somds_consumer <- sdpi_somds_provider: SDC: ProbeMatches(EndpointReference, [XAddrs])
    '|||
    '        opt if XAddrs were missing from ProbeMatches or Hello
    '            sdpi_somds_consumer ->> sdpi_somds_provider: SDC: Resolve(EndpointReference)
    '            sdpi_somds_consumer <- sdpi_somds_provider: SDC: ResolveMatches(XAddrs)
    '        end
        end
    end
    |||
    group verified departure
        sdpi_somds_provider ->> sdpi_somds_consumer: SDC: Bye(EndpointReference)

    |||
    note over sdpi_somds_provider, sdpi_somds_consumer
        Since Bye() is unsecured, a consumer may optionally verify that 
        the provider has actually disconnected vs. a possible security exploit.
    end note     
    |||
    opt
        group secured
            note over sdpi_somds_consumer, sdpi_somds_provider
            Attempt to perform any secured message exchange with the provider.
            end note 
            |||
            sdpi_somds_consumer -> sdpi_somds_provider: SDC: TransferGet()
            alt provider responds - still present!
                sdpi_somds_consumer <-- sdpi_somds_provider: SDC: TransferGetResponse(HostingService, ThisDevice, ThisModel, HostedServices)
            else communication time out
                sdpi_somds_consumer -> sdpi_somds_consumer:  Apply SOMDS Provider disconnect

            end 
        end
    end
end
|||

